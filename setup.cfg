[metadata]
name = yeoda
version = v0.3.0
description = yeoda provides lower and higher-level data cube classes to work with well-defined and well-structured earth observation data.
author = TU Wien MRS group
author_email = remote.sensing@geo.tuwien.ac.at
license = MIT
url = https://github.com/TUW-GEO/yeoda
download_url = https://github.com/TUW-GEO/yeoda/archive/v0.3.0.tar.gz
long_description = file: README.md
long_description_content_type = text/markdown
keywords=
    Earth Observation
    Remote Sensing
    Data Reader
    Data Cube
platforms = any
classifiers =

    Development Status :: 4 - Beta
    License :: OSI Approved :: MIT License
    Topic :: Scientific/Engineering
    Topic :: Software Development :: Version Control :: Git
    Programming Language :: Python :: 3.6
    Natural Language :: English


[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.1a0,<3.2a0
install_requires =
    veranda @ https://github.com/TUW-GEO/veranda.git
    geopathfinder @ https://github.com/TUW-GEO/geopathfinder.git@add_creator_yeodafilename
# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install yeoda[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    pytest-cov
    coverage
    pytest

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = yeoda.module:function
# For example:
# console_scripts =
#     fibonacci = yeoda.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov yeoda --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.1

package = yeoda

